// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ProyectoLogin.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240614003441_InitSchema4")]
    partial class InitSchema4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProyectoLogin.Models.Archivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("arch_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("arch_direccion");

                    b.Property<string>("Documento")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("arch_documento");

                    b.Property<DateOnly?>("FechaOtorgamiento")
                        .HasColumnType("date")
                        .HasColumnName("arch_fecha_otorgamiento");

                    b.Property<string>("PersonaEntrega")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("arch_persona_entrega");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("arch_telefono");

                    b.Property<string>("TipoActo")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("arch_tipo_acto");

                    b.HasKey("Id")
                        .HasName("archivo_pkey");

                    b.ToTable("archivo", (string)null);
                });

            modelBuilder.Entity("ProyectoLogin.Models.Cotizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cot_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aceptacion")
                        .HasColumnType("boolean")
                        .HasColumnName("cot_aceptacion");

                    b.Property<string>("Documento")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("cot_documento");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("cot_fecha");

                    b.Property<int>("ProcesoId")
                        .HasColumnType("integer")
                        .HasColumnName("pro_id");

                    b.Property<int>("UsuarioNotariaId")
                        .HasColumnType("integer")
                        .HasColumnName("usunot_id");

                    b.Property<float>("ValorTotal")
                        .HasColumnType("real")
                        .HasColumnName("cot_valor_total");

                    b.HasKey("Id")
                        .HasName("cotizacion_pkey");

                    b.HasIndex("ProcesoId");

                    b.HasIndex("UsuarioNotariaId");

                    b.ToTable("cotizacion", (string)null);
                });

            modelBuilder.Entity("ProyectoLogin.Models.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("fac_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CedulaCliente")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("fac_cedula_cliente");

                    b.Property<string>("CorreoCliente")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("fac_correo_cliente");

                    b.Property<string>("DireccionCliente")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("fac_direccion_cliente");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("fac_nombre_cliente");

                    b.Property<int>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("fac_numero");

                    b.Property<int>("ProcesoId")
                        .HasColumnType("integer")
                        .HasColumnName("pro_id");

                    b.HasKey("Id")
                        .HasName("factura_pkey");

                    b.HasIndex("ProcesoId");

                    b.ToTable("factura", (string)null);
                });

            modelBuilder.Entity("ProyectoLogin.Models.Opcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("op_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NombrePermiso")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("op_nombre_permiso");

                    b.HasKey("Id")
                        .HasName("opciones_pkey");

                    b.ToTable("opciones", (string)null);
                });

            modelBuilder.Entity("ProyectoLogin.Models.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("per_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OpcionId")
                        .HasColumnType("integer")
                        .HasColumnName("op_id");

                    b.Property<int>("UsuarioClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("usucli_id");

                    b.Property<int>("UsuarioNotariaId")
                        .HasColumnType("integer")
                        .HasColumnName("usunot_id");

                    b.HasKey("Id")
                        .HasName("permisos_pkey");

                    b.HasIndex("OpcionId");

                    b.HasIndex("UsuarioClienteId");

                    b.HasIndex("UsuarioNotariaId");

                    b.ToTable("permisos", (string)null);
                });

            modelBuilder.Entity("ProyectoLogin.Models.Proceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pro_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ArchivoId")
                        .HasColumnType("integer")
                        .HasColumnName("arch_id");

                    b.Property<bool?>("Envio")
                        .HasColumnType("boolean")
                        .HasColumnName("pro_envio");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("pro_estado");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("pro_fecha_creacion");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("pro_fecha_finalizacion");

                    b.Property<string>("Observacion")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("pro_observacion");

                    b.Property<int>("TipoProcesoId")
                        .HasColumnType("integer")
                        .HasColumnName("tip_id");

                    b.Property<int>("UsuarioClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("usucli_id");

                    b.HasKey("Id")
                        .HasName("proceso_pkey");

                    b.HasIndex("ArchivoId");

                    b.HasIndex("TipoProcesoId");

                    b.HasIndex("UsuarioClienteId");

                    b.ToTable("proceso", (string)null);
                });

            modelBuilder.Entity("ProyectoLogin.Models.TipoProceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tip_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tip_nombre");

                    b.HasKey("Id")
                        .HasName("tipo_proceso_pkey");

                    b.ToTable("TipoProceso", (string)null);
                });

            modelBuilder.Entity("ProyectoLogin.Models.UsuarioCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("usucli_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("usucli_apellido");

                    b.Property<string>("Cedula")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("usucli_cedula");

                    b.Property<string>("Clave")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("usucli_clave");

                    b.Property<string>("Correo")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("usucli_correo");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("usucli_direccion");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("usucli_nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("usucli_telefono");

                    b.HasKey("Id")
                        .HasName("usuario_cliente_pkey");

                    b.ToTable("usuario_cliente", (string)null);
                });

            modelBuilder.Entity("ProyectoLogin.Models.UsuarioNotaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("usunot_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("usunot_apellido");

                    b.Property<string>("Clave")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("usunot_clave");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("usunot_correo");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("usunot_nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("usunot_telefono");

                    b.HasKey("Id")
                        .HasName("usuario_notaria_pkey");

                    b.ToTable("usuario_notaria", (string)null);
                });

            modelBuilder.Entity("ProyectoLogin.Models.Cotizacion", b =>
                {
                    b.HasOne("ProyectoLogin.Models.Proceso", "Proceso")
                        .WithMany("Cotizaciones")
                        .HasForeignKey("ProcesoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cotizaci_tener_proceso");

                    b.HasOne("ProyectoLogin.Models.UsuarioNotaria", "UsuarioNotaria")
                        .WithMany("Cotizaciones")
                        .HasForeignKey("UsuarioNotariaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cotizaci_crea_usuario_");

                    b.Navigation("Proceso");

                    b.Navigation("UsuarioNotaria");
                });

            modelBuilder.Entity("ProyectoLogin.Models.Factura", b =>
                {
                    b.HasOne("ProyectoLogin.Models.Proceso", "Proceso")
                        .WithMany("Facturas")
                        .HasForeignKey("ProcesoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_factura_lleva_proceso");

                    b.Navigation("Proceso");
                });

            modelBuilder.Entity("ProyectoLogin.Models.Permiso", b =>
                {
                    b.HasOne("ProyectoLogin.Models.Opcion", "Opcion")
                        .WithMany("Permisos")
                        .HasForeignKey("OpcionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_permisos_permisos2_opciones");

                    b.HasOne("ProyectoLogin.Models.UsuarioCliente", "UsuarioCliente")
                        .WithMany("Permisos")
                        .HasForeignKey("UsuarioClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_permisos_permisos_usuario_");

                    b.HasOne("ProyectoLogin.Models.UsuarioNotaria", "UsuarioNotaria")
                        .WithMany("Permisos")
                        .HasForeignKey("UsuarioNotariaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_permisos_permisos3_usuario_");

                    b.Navigation("Opcion");

                    b.Navigation("UsuarioCliente");

                    b.Navigation("UsuarioNotaria");
                });

            modelBuilder.Entity("ProyectoLogin.Models.Proceso", b =>
                {
                    b.HasOne("ProyectoLogin.Models.Archivo", "Archivo")
                        .WithMany("Procesos")
                        .HasForeignKey("ArchivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_proceso_tiene_archivo");

                    b.HasOne("ProyectoLogin.Models.TipoProceso", "TipoProceso")
                        .WithMany("Procesos")
                        .HasForeignKey("TipoProcesoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_proceso_es_tipo_pro");

                    b.HasOne("ProyectoLogin.Models.UsuarioCliente", "UsuarioCliente")
                        .WithMany("Procesos")
                        .HasForeignKey("UsuarioClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_proceso_relations_usuario_");

                    b.Navigation("Archivo");

                    b.Navigation("TipoProceso");

                    b.Navigation("UsuarioCliente");
                });

            modelBuilder.Entity("ProyectoLogin.Models.Archivo", b =>
                {
                    b.Navigation("Procesos");
                });

            modelBuilder.Entity("ProyectoLogin.Models.Opcion", b =>
                {
                    b.Navigation("Permisos");
                });

            modelBuilder.Entity("ProyectoLogin.Models.Proceso", b =>
                {
                    b.Navigation("Cotizaciones");

                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("ProyectoLogin.Models.TipoProceso", b =>
                {
                    b.Navigation("Procesos");
                });

            modelBuilder.Entity("ProyectoLogin.Models.UsuarioCliente", b =>
                {
                    b.Navigation("Permisos");

                    b.Navigation("Procesos");
                });

            modelBuilder.Entity("ProyectoLogin.Models.UsuarioNotaria", b =>
                {
                    b.Navigation("Cotizaciones");

                    b.Navigation("Permisos");
                });
#pragma warning restore 612, 618
        }
    }
}
